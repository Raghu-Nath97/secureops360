name: 🧪 Testing & Quality Assurance

on:
  push:
    branches: [main]
    paths:
      - 'services/**'
      - 'tests/**'
      - '.github/workflows/testing.yml'
  pull_request:
    branches: [main]
    paths:
      - 'services/**'
      - 'tests/**'

jobs:
  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
        service: [enricher-svc, scorer-svc]
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install Dependencies
        working-directory: services/${{ matrix.service }}
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: 🧪 Run Unit Tests
        working-directory: services/${{ matrix.service }}
        run: |
          echo "🧪 Running unit tests for ${{ matrix.service }}..."
          python -m pytest tests/ -v --cov=. --cov-report=xml --cov-report=term-missing
        continue-on-error: false

      - name: 📊 Upload Coverage Reports
        uses: codecov/codecov-action@v4
        with:
          file: services/${{ matrix.service }}/coverage.xml
          flags: ${{ matrix.service }}
          name: ${{ matrix.service }}-coverage

  integration-tests:
    name: 🔗 Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: 📦 Install Dependencies
        run: |
          pip install -r requirements-dev.txt

      - name: 🔗 Run Integration Tests
        run: |
          echo "🔗 Running integration tests..."
          python -m pytest tests/integration/ -v
        continue-on-error: false

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔒 Run Bandit Security Scan
        run: |
          pip install bandit[toml]
          bandit -r services/ -f json -o security-report.json

      - name: 📤 Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.json
